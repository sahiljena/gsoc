"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[8121],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7773:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Week 7",author:"Sarita Singh"},s=void 0,c={unversionedId:"2021/scancode/updates/2021-07-20",id:"2021/scancode/updates/2021-07-20",isDocsHomePage:!1,title:"Week 7",description:"\x3c!--",source:"@site/docs/2021/scancode/updates/2021-07-20.md",sourceDirName:"2021/scancode/updates",slug:"/2021/scancode/updates/2021-07-20",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-20",editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2021/scancode/updates/2021-07-20.md",tags:[],version:"current",frontMatter:{title:"Week 7",author:"Sarita Singh"},sidebar:"2021",previous:{title:"Week 6",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-13"},next:{title:"Week 8",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-27"}},u=[{value:"Coding Week 7 Meeting 1",id:"coding-week-7-meeting-1",children:[{value:"Attendees",id:"attendees",children:[]},{value:"Week 6 Progress",id:"week-6-progress",children:[]},{value:"Discussions",id:"discussions",children:[]},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",children:[]}]},{value:"Coding Week 7 Meeting 2",id:"coding-week-7-meeting-2",children:[{value:"Attendees",id:"attendees-1",children:[]},{value:"Discussions",id:"discussions-1",children:[]},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans-1",children:[]}]}],p={toc:u};function d(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"coding-week-7-meeting-1"},"Coding Week 7 Meeting 1"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Date:2021-07-20")),(0,i.kt)("h3",{id:"attendees"},"Attendees"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mcjaeger"},"Michael C. Jaeger")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/GMishx"},"Gaurav Mishra")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ag4ums"},"Anupam Ghosh")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/avinal"},"Avinal Kumar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/itssingh"},"Sarita Singh"))),(0,i.kt)("h3",{id:"week-6-progress"},"Week 6 Progress"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Populated copyright table for scancode.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Extended Email/URL/Author Browser to add scan result by ScanCode.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"There are two levels of pagination one for FOSSology and ScanCode and other for email/url/author tabs."),(0,i.kt)("p",{parentName:"li"},"  ",(0,i.kt)("img",{alt:"image",src:n(6360).Z}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"All the available options for Test replacement, Replace selected rows and, Deactivate selected rows are working good."))),(0,i.kt)("h3",{id:"discussions"},"Discussions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There is a bug in the pagination of the Email/URL/Author Browser. It could be possibly because of cookies. Check out storage of the inspect page, there will be index for different ",(0,i.kt)("inlineCode",{parentName:"li"},"cookies")," and it would be helpful in debugging."),(0,i.kt)("li",{parentName:"ul"},"Maintagent can be taken as a reference to create verbose flags. ScanCode UI will look like reuser/desider in the upload section."),(0,i.kt)("li",{parentName:"ul"},"There is a problem in finding start byte of copyright due to ",(0,i.kt)("inlineCode",{parentName:"li"},"unicode character"),"."),(0,i.kt)("li",{parentName:"ul"},"ScanCode change ",(0,i.kt)("inlineCode",{parentName:"li"},"\xa9")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"(c)")," and also removes some of the characters like ",(0,i.kt)("inlineCode",{parentName:"li"},":")," from ",(0,i.kt)("inlineCode",{parentName:"li"},"copyright(c): Sarita Singh")," and scan results to ",(0,i.kt)("inlineCode",{parentName:"li"},"copyright (c) Sarita Singh"),". This thing causes issue in finding start byte of copyright and also integrating scancode copyright to report(unable to remove redundant data). "),(0,i.kt)("li",{parentName:"ul"},"Michael suggested to drop copyright and ",(0,i.kt)("inlineCode",{parentName:"li"},"unicode characters")," and then use sub-string matching to find approx. position(but it would be inaccurate)."),(0,i.kt)("li",{parentName:"ul"},"Creating a ScanCode plugin to get ",(0,i.kt)("inlineCode",{parentName:"li"},"copyright text")," like ",(0,i.kt)("inlineCode",{parentName:"li"},"matched license text")," would solve the issue.")),(0,i.kt)("h3",{id:"conclusion-and-further-plans"},"Conclusion and Further Plans"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix author tabs."),(0,i.kt)("li",{parentName:"ul"},"Use verbose flags for scancode agent like maintagent."),(0,i.kt)("li",{parentName:"ul"},"creating a scancode plugin to get copyright text can work. ")),(0,i.kt)("h2",{id:"coding-week-7-meeting-2"},"Coding Week 7 Meeting 2"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Date:2021-07-23")),(0,i.kt)("h3",{id:"attendees-1"},"Attendees"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mcjaeger"},"Michael C. Jaeger")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/GMishx"},"Gaurav Mishra")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ag4ums"},"Anupam Ghosh")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/shaheemazmalmmd"},"Shaheem Azmal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/avinal"},"Avinal Kumar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/itssingh"},"Sarita Singh"))),(0,i.kt)("h3",{id:"discussions-1"},"Discussions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ScheduleAgent function code in ",(0,i.kt)("inlineCode",{parentName:"li"},"scancode/ui/agent_scancode.php")," is correct."),(0,i.kt)("li",{parentName:"ul"},"Format of flag for ",(0,i.kt)("inlineCode",{parentName:"li"},"jq_cmd_args")," depends upon the code we are using to parse this flag inside the ScanCode agent."),(0,i.kt)("li",{parentName:"ul"},"Gaurav suggested to take reference for cliOptions from copyright or ojo agent."),(0,i.kt)("li",{parentName:"ul"},"They are using ",(0,i.kt)("inlineCode",{parentName:"li"},"Boost.Program_options")," library which can be used to parse command line arguments and get ScanCode flags."),(0,i.kt)("li",{parentName:"ul"},"Further, this code can be reused for adding ScanCode agent to run by command line.")),(0,i.kt)("h3",{id:"conclusion-and-further-plans-1"},"Conclusion and Further Plans"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ScheduleAgent function in ",(0,i.kt)("inlineCode",{parentName:"li"},"scancode/ui/agent_scancode.php"),"."),(0,i.kt)("li",{parentName:"ul"},"Next step is to parse the scancode args to get scancode CLI flags."),(0,i.kt)("li",{parentName:"ul"},"Use Boost program options for scancode CLI.")))}d.isMDXComponent=!0},6360:function(e,t,n){t.Z=n.p+"assets/images/author-a746aedb7f8c326a7bd277de7598f554.png"}}]);