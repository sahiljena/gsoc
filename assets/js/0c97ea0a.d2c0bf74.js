"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[358],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||r;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5660:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={title:"Week 4",author:"Sarita"},s=void 0,c={unversionedId:"2021/scancode/updates/2021-06-29",id:"2021/scancode/updates/2021-06-29",isDocsHomePage:!1,title:"Week 4",description:"\x3c!--",source:"@site/docs/2021/scancode/updates/2021-06-29.md",sourceDirName:"2021/scancode/updates",slug:"/2021/scancode/updates/2021-06-29",permalink:"/gsoc/docs/2021/scancode/updates/2021-06-29",editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2021/scancode/updates/2021-06-29.md",tags:[],version:"current",frontMatter:{title:"Week 4",author:"Sarita"},sidebar:"2021",previous:{title:"Week 3",permalink:"/gsoc/docs/2021/scancode/updates/2021-06-22"},next:{title:"Week 5",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-06"}},d=[{value:"Coding Week 4 Meeting 1",id:"coding-week-4-meeting-1",children:[{value:"Attendees",id:"attendees",children:[]},{value:"Week 3 Progress",id:"week-3-progress",children:[]},{value:"Discussions",id:"discussions",children:[]},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",children:[]}]},{value:"Coding Week 4 Meeting 2",id:"coding-week-4-meeting-2",children:[{value:"Attendees",id:"attendees-1",children:[]},{value:"Discussions",id:"discussions-1",children:[]},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans-1",children:[]}]}],u={toc:d};function p(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"coding-week-4-meeting-1"},"Coding Week 4 Meeting 1"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Date:2021-06-29")),(0,r.kt)("h3",{id:"attendees"},"Attendees"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/GMishx"},"Gaurav Mishra ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mcjaeger"},"Michael C. Jaeger")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/avinal"},"Avinal Kumar ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/itssingh"},"Sarita Singh "))),(0,r.kt)("h3",{id:"week-3-progress"},"Week 3 Progress"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Populated ScanCode wrapper to include copyright and author information."),(0,r.kt)("li",{parentName:"ul"},"Currently using FOSSology copyright and author database tables to insert these information."),(0,r.kt)("li",{parentName:"ul"},"FOSSology Scheduler is calling ScanCode for copyright and author along with licenses. ")),(0,r.kt)("h3",{id:"discussions"},"Discussions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Asked how to copyright agent is generating hash for copyright and author tables?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Hash is md5(content). "))),(0,r.kt)("li",{parentName:"ul"},"What is clearing table in copyright agent database ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/fossology/fossology/blob/master/src/copyright/agent/database.cc#L248-L308"},"here")," ?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This code block creates ",(0,r.kt)("inlineCode",{parentName:"li"},"copyright_decision")," table."),(0,r.kt)("li",{parentName:"ul"},"This table is used to store user's decision."),(0,r.kt)("li",{parentName:"ul"},"Similarly there are ",(0,r.kt)("inlineCode",{parentName:"li"},"license_decision")," table which stores ",(0,r.kt)("inlineCode",{parentName:"li"},"user's clearing decision")," for licenses."))),(0,r.kt)("li",{parentName:"ul"},"Gaurav explained how copyright agent/user finding works.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Agent findings contain what scanners has found, if a user makes changes in the agents finding that changes will be recorded into ",(0,r.kt)("inlineCode",{parentName:"li"},"copyright_event")," table."),(0,r.kt)("li",{parentName:"ul"},"For the same ",(0,r.kt)("inlineCode",{parentName:"li"},"pfile")," that agent will give edited result."),(0,r.kt)("li",{parentName:"ul"},"User finding table records ",(0,r.kt)("inlineCode",{parentName:"li"},"user_decision")," during clearing in the ",(0,r.kt)("inlineCode",{parentName:"li"},"UI")," and that content is inserted into ",(0,r.kt)("inlineCode",{parentName:"li"},"copyright_decision")," table in the database."),(0,r.kt)("li",{parentName:"ul"},"These clearing results are helpful during creating report."),(0,r.kt)("li",{parentName:"ul"},"Scancode will also include ",(0,r.kt)("inlineCode",{parentName:"li"},"reporting"),"."))),(0,r.kt)("li",{parentName:"ul"},"Avinal asked question about how to ",(0,r.kt)("inlineCode",{parentName:"li"},"reuse")," an upload for different agent without reloading?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Gaurav explained following:"),(0,r.kt)("li",{parentName:"ul"},"Under Jobs go to Schedule agents, there select an upload to analyse and the agent who will do analysis."))),(0,r.kt)("li",{parentName:"ul"},"Gaurav suggested a ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=TZqU5ZALI7U"},"FOSSology Using: End-to-end workflow")," video on YouTube.")),(0,r.kt)("h3",{id:"conclusion-and-further-plans"},"Conclusion and Further Plans"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Creating tables for scancode copyright and author."),(0,r.kt)("li",{parentName:"ul"},"Watch end-to-end fossology workflow video and understand fossology UI and working.")),(0,r.kt)("h2",{id:"coding-week-4-meeting-2"},"Coding Week 4 Meeting 2"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Date:2021-07-02")),(0,r.kt)("h3",{id:"attendees-1"},"Attendees"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/GMishx"},"Gaurav Mishra ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/avinal"},"Avinal Kumar ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/itssingh"},"Sarita Singh "))),(0,r.kt)("h3",{id:"discussions-1"},"Discussions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"L")," for ScanCode type field in the highlight table where ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," will be match property of the highlight class in HighlightDao.php."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added a new type ",(0,r.kt)("inlineCode",{parentName:"li"},"S")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"HighlightDao.php")," also changed type from ",(0,r.kt)("inlineCode",{parentName:"li"},"signature")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"match")," as like monk agent ScanCode matches text."),(0,r.kt)("li",{parentName:"ul"},"Gaurav explained about identical displayed on the UI by monk scanner as, It highlight those text which are identical with the license text in the license_ref table. Whereas license relevant text means the highlighted text has been matched with license text or rules written for the license. "),(0,r.kt)("li",{parentName:"ul"},"So license relevant text is suitable for the ScanCode highlight."),(0,r.kt)("li",{parentName:"ul"},"Also Gaurav suggested to reuse the resources already present and no need to add a new type for scancode highlight, nomos type could be reused."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Sarita(Me) shows newly created tables for scancode_copyright and scancode_author. Gaurav approved changes.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Added a function in the scancode database to insert no license in the license_file table for a code zip have no license."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"  bool ScancodeDatabaseHandler::insertNoResultInDatabase(int agentId, long pFileId ){\n    return saveLicenseMatch(agentId, pFileId, 320, NULL);\n  }\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Gaurav clarified that ",(0,r.kt)("inlineCode",{parentName:"p"},"320")," is not constant licenseId for no-license. So instead leave licenseId null. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"There is still a discussion needed (with other mentors) to decide is no license case is needed to take care for ScanCode or not."))),(0,r.kt)("h3",{id:"conclusion-and-further-plans-1"},"Conclusion and Further Plans"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Start implementing UI to make scancode a parameterized agent."),(0,r.kt)("li",{parentName:"ul"},"Discuss about ",(0,r.kt)("inlineCode",{parentName:"li"},"no license/copyright/author")," case for scancode.")))}p.isMDXComponent=!0}}]);